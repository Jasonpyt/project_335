<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--
            xmlns="http://www.springframework.org/schema/beans" 引入bean标签的名称空间
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd  引入bean标签的约束
    -->
    <!--对象的范围
        singleton :单例模式
        prototype: 多例模式（原型模式）
        request: 请求范围
        session： 会话范围
        global session: 全局  - spring 5 中已经删除
      生命周期
        init-method:初始化时执行
        destroy-method:销毁时执行
      单例模式的对象：创建容器时创建对象
                     容器销毁时，销毁对象
      原型模式的对象：获取对象时创建对象，获取一次创建一个对象
                     在对象没有引用时通过垃圾回收机制回收原型模式对象
    -->

        <bean name="userDao1" class="com.itheima.dao.impl.UserDaoImpl" scope="prototype" init-method="init" destroy-method="destroy" ></bean>
        <bean name="userDao2" class="com.itheima.dao.impl.UserDaoImpl2"></bean>
        <bean id="userSerivice" class="com.itheima.dao.impl.UserServiceImpl"></bean>


    <!--使用静态工厂模式创建bean对象-->
    <!--
         id:唯一的名称
         class: 指定静态工厂类
         factory-method: 指定静态的方法
    -->
    <bean id="StaticBeanFactory" class="com.itheima.factory.StaticBeanFactory" factory-method="getUserDao"></bean>
    <bean id="InstanceBeanFactory" class="com.itheima.factory.InstanceBeanFactory"></bean>
    <bean id="instanceBeanUserDao" factory-bean="InstanceBeanFactory" factory-method="getUserDao"></bean>
</beans>


